/**
 * Keych API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecuteMessagePostRequestOneOf6NftInfo from './ExecuteMessagePostRequestOneOf6NftInfo';
import QueryWithPermitOneOf from './QueryWithPermitOneOf';
import QueryWithPermitOneOf1 from './QueryWithPermitOneOf1';
import QueryWithPermitOneOf10 from './QueryWithPermitOneOf10';
import QueryWithPermitOneOf10AllTokens from './QueryWithPermitOneOf10AllTokens';
import QueryWithPermitOneOf11 from './QueryWithPermitOneOf11';
import QueryWithPermitOneOf12 from './QueryWithPermitOneOf12';
import QueryWithPermitOneOf13 from './QueryWithPermitOneOf13';
import QueryWithPermitOneOf13Tokens from './QueryWithPermitOneOf13Tokens';
import QueryWithPermitOneOf14 from './QueryWithPermitOneOf14';
import QueryWithPermitOneOf14NumTokensOfOwner from './QueryWithPermitOneOf14NumTokensOfOwner';
import QueryWithPermitOneOf15 from './QueryWithPermitOneOf15';
import QueryWithPermitOneOf2 from './QueryWithPermitOneOf2';
import QueryWithPermitOneOf2NftDossier from './QueryWithPermitOneOf2NftDossier';
import QueryWithPermitOneOf3 from './QueryWithPermitOneOf3';
import QueryWithPermitOneOf3BatchNftDossier from './QueryWithPermitOneOf3BatchNftDossier';
import QueryWithPermitOneOf4 from './QueryWithPermitOneOf4';
import QueryWithPermitOneOf5 from './QueryWithPermitOneOf5';
import QueryWithPermitOneOf6 from './QueryWithPermitOneOf6';
import QueryWithPermitOneOf6InventoryApprovals from './QueryWithPermitOneOf6InventoryApprovals';
import QueryWithPermitOneOf7 from './QueryWithPermitOneOf7';
import QueryWithPermitOneOf7VerifyTransferApproval from './QueryWithPermitOneOf7VerifyTransferApproval';
import QueryWithPermitOneOf8 from './QueryWithPermitOneOf8';
import QueryWithPermitOneOf8TransactionHistory from './QueryWithPermitOneOf8TransactionHistory';
import QueryWithPermitOneOf9 from './QueryWithPermitOneOf9';
import QueryWithPermitOneOfRoyaltyInfo from './QueryWithPermitOneOfRoyaltyInfo';

/**
 * The QueryWithPermit model module.
 * @module model/QueryWithPermit
 * @version 1.0.0
 */
class QueryWithPermit {
    /**
     * Constructs a new <code>QueryWithPermit</code>.
     * queries using permits instead of viewing keys
     * @alias module:model/QueryWithPermit
     * @param {(module:model/QueryWithPermitOneOf|module:model/QueryWithPermitOneOf1|module:model/QueryWithPermitOneOf10|module:model/QueryWithPermitOneOf11|module:model/QueryWithPermitOneOf12|module:model/QueryWithPermitOneOf13|module:model/QueryWithPermitOneOf14|module:model/QueryWithPermitOneOf15|module:model/QueryWithPermitOneOf2|module:model/QueryWithPermitOneOf3|module:model/QueryWithPermitOneOf4|module:model/QueryWithPermitOneOf5|module:model/QueryWithPermitOneOf6|module:model/QueryWithPermitOneOf7|module:model/QueryWithPermitOneOf8|module:model/QueryWithPermitOneOf9)} instance The actual instance to initialize QueryWithPermit.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "QueryWithPermitOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf from JS object
                this.actualInstance = QueryWithPermitOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf
            errorMessages.push("Failed to construct QueryWithPermitOneOf: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf1.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf1 from JS object
                this.actualInstance = QueryWithPermitOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf1
            errorMessages.push("Failed to construct QueryWithPermitOneOf1: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf2.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf2 from JS object
                this.actualInstance = QueryWithPermitOneOf2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf2
            errorMessages.push("Failed to construct QueryWithPermitOneOf2: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf3") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf3.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf3 from JS object
                this.actualInstance = QueryWithPermitOneOf3.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf3
            errorMessages.push("Failed to construct QueryWithPermitOneOf3: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf4") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf4.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf4 from JS object
                this.actualInstance = QueryWithPermitOneOf4.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf4
            errorMessages.push("Failed to construct QueryWithPermitOneOf4: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf5") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf5.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf5 from JS object
                this.actualInstance = QueryWithPermitOneOf5.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf5
            errorMessages.push("Failed to construct QueryWithPermitOneOf5: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf6") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf6.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf6 from JS object
                this.actualInstance = QueryWithPermitOneOf6.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf6
            errorMessages.push("Failed to construct QueryWithPermitOneOf6: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf7") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf7.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf7 from JS object
                this.actualInstance = QueryWithPermitOneOf7.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf7
            errorMessages.push("Failed to construct QueryWithPermitOneOf7: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf8") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf8.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf8 from JS object
                this.actualInstance = QueryWithPermitOneOf8.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf8
            errorMessages.push("Failed to construct QueryWithPermitOneOf8: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf9") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf9.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf9 from JS object
                this.actualInstance = QueryWithPermitOneOf9.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf9
            errorMessages.push("Failed to construct QueryWithPermitOneOf9: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf10") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf10.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf10 from JS object
                this.actualInstance = QueryWithPermitOneOf10.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf10
            errorMessages.push("Failed to construct QueryWithPermitOneOf10: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf11") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf11.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf11 from JS object
                this.actualInstance = QueryWithPermitOneOf11.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf11
            errorMessages.push("Failed to construct QueryWithPermitOneOf11: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf12") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf12.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf12 from JS object
                this.actualInstance = QueryWithPermitOneOf12.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf12
            errorMessages.push("Failed to construct QueryWithPermitOneOf12: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf13") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf13.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf13 from JS object
                this.actualInstance = QueryWithPermitOneOf13.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf13
            errorMessages.push("Failed to construct QueryWithPermitOneOf13: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf14") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf14.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf14 from JS object
                this.actualInstance = QueryWithPermitOneOf14.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf14
            errorMessages.push("Failed to construct QueryWithPermitOneOf14: " + err)
        }

        try {
            if (typeof instance === "QueryWithPermitOneOf15") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                QueryWithPermitOneOf15.validateJSON(instance); // throw an exception if no match
                // create QueryWithPermitOneOf15 from JS object
                this.actualInstance = QueryWithPermitOneOf15.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into QueryWithPermitOneOf15
            errorMessages.push("Failed to construct QueryWithPermitOneOf15: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `QueryWithPermit` with oneOf schemas QueryWithPermitOneOf, QueryWithPermitOneOf1, QueryWithPermitOneOf10, QueryWithPermitOneOf11, QueryWithPermitOneOf12, QueryWithPermitOneOf13, QueryWithPermitOneOf14, QueryWithPermitOneOf15, QueryWithPermitOneOf2, QueryWithPermitOneOf3, QueryWithPermitOneOf4, QueryWithPermitOneOf5, QueryWithPermitOneOf6, QueryWithPermitOneOf7, QueryWithPermitOneOf8, QueryWithPermitOneOf9. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `QueryWithPermit` with oneOf schemas QueryWithPermitOneOf, QueryWithPermitOneOf1, QueryWithPermitOneOf10, QueryWithPermitOneOf11, QueryWithPermitOneOf12, QueryWithPermitOneOf13, QueryWithPermitOneOf14, QueryWithPermitOneOf15, QueryWithPermitOneOf2, QueryWithPermitOneOf3, QueryWithPermitOneOf4, QueryWithPermitOneOf5, QueryWithPermitOneOf6, QueryWithPermitOneOf7, QueryWithPermitOneOf8, QueryWithPermitOneOf9. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>QueryWithPermit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryWithPermit} obj Optional instance to populate.
     * @return {module:model/QueryWithPermit} The populated <code>QueryWithPermit</code> instance.
     */
    static constructFromObject(data, obj) {
        return new QueryWithPermit(data);
    }

    /**
     * Gets the actual instance, which can be <code>QueryWithPermitOneOf</code>, <code>QueryWithPermitOneOf1</code>, <code>QueryWithPermitOneOf10</code>, <code>QueryWithPermitOneOf11</code>, <code>QueryWithPermitOneOf12</code>, <code>QueryWithPermitOneOf13</code>, <code>QueryWithPermitOneOf14</code>, <code>QueryWithPermitOneOf15</code>, <code>QueryWithPermitOneOf2</code>, <code>QueryWithPermitOneOf3</code>, <code>QueryWithPermitOneOf4</code>, <code>QueryWithPermitOneOf5</code>, <code>QueryWithPermitOneOf6</code>, <code>QueryWithPermitOneOf7</code>, <code>QueryWithPermitOneOf8</code>, <code>QueryWithPermitOneOf9</code>.
     * @return {(module:model/QueryWithPermitOneOf|module:model/QueryWithPermitOneOf1|module:model/QueryWithPermitOneOf10|module:model/QueryWithPermitOneOf11|module:model/QueryWithPermitOneOf12|module:model/QueryWithPermitOneOf13|module:model/QueryWithPermitOneOf14|module:model/QueryWithPermitOneOf15|module:model/QueryWithPermitOneOf2|module:model/QueryWithPermitOneOf3|module:model/QueryWithPermitOneOf4|module:model/QueryWithPermitOneOf5|module:model/QueryWithPermitOneOf6|module:model/QueryWithPermitOneOf7|module:model/QueryWithPermitOneOf8|module:model/QueryWithPermitOneOf9)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>QueryWithPermitOneOf</code>, <code>QueryWithPermitOneOf1</code>, <code>QueryWithPermitOneOf10</code>, <code>QueryWithPermitOneOf11</code>, <code>QueryWithPermitOneOf12</code>, <code>QueryWithPermitOneOf13</code>, <code>QueryWithPermitOneOf14</code>, <code>QueryWithPermitOneOf15</code>, <code>QueryWithPermitOneOf2</code>, <code>QueryWithPermitOneOf3</code>, <code>QueryWithPermitOneOf4</code>, <code>QueryWithPermitOneOf5</code>, <code>QueryWithPermitOneOf6</code>, <code>QueryWithPermitOneOf7</code>, <code>QueryWithPermitOneOf8</code>, <code>QueryWithPermitOneOf9</code>.
     * @param {(module:model/QueryWithPermitOneOf|module:model/QueryWithPermitOneOf1|module:model/QueryWithPermitOneOf10|module:model/QueryWithPermitOneOf11|module:model/QueryWithPermitOneOf12|module:model/QueryWithPermitOneOf13|module:model/QueryWithPermitOneOf14|module:model/QueryWithPermitOneOf15|module:model/QueryWithPermitOneOf2|module:model/QueryWithPermitOneOf3|module:model/QueryWithPermitOneOf4|module:model/QueryWithPermitOneOf5|module:model/QueryWithPermitOneOf6|module:model/QueryWithPermitOneOf7|module:model/QueryWithPermitOneOf8|module:model/QueryWithPermitOneOf9)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = QueryWithPermit.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of QueryWithPermit from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/QueryWithPermit} An instance of QueryWithPermit.
     */
    static fromJSON = function(json_string){
        return QueryWithPermit.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/QueryWithPermitOneOfRoyaltyInfo} royalty_info
 */
QueryWithPermit.prototype['royalty_info'] = undefined;

/**
 * @member {module:model/ExecuteMessagePostRequestOneOf6NftInfo} private_metadata
 */
QueryWithPermit.prototype['private_metadata'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf2NftDossier} nft_dossier
 */
QueryWithPermit.prototype['nft_dossier'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf3BatchNftDossier} batch_nft_dossier
 */
QueryWithPermit.prototype['batch_nft_dossier'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf2NftDossier} owner_of
 */
QueryWithPermit.prototype['owner_of'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf2NftDossier} all_nft_info
 */
QueryWithPermit.prototype['all_nft_info'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf6InventoryApprovals} inventory_approvals
 */
QueryWithPermit.prototype['inventory_approvals'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf7VerifyTransferApproval} verify_transfer_approval
 */
QueryWithPermit.prototype['verify_transfer_approval'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf8TransactionHistory} transaction_history
 */
QueryWithPermit.prototype['transaction_history'] = undefined;

/**
 * @member {Object} num_tokens
 */
QueryWithPermit.prototype['num_tokens'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf10AllTokens} all_tokens
 */
QueryWithPermit.prototype['all_tokens'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf2NftDossier} token_approvals
 */
QueryWithPermit.prototype['token_approvals'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf6InventoryApprovals} approved_for_all
 */
QueryWithPermit.prototype['approved_for_all'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf13Tokens} tokens
 */
QueryWithPermit.prototype['tokens'] = undefined;

/**
 * @member {module:model/QueryWithPermitOneOf14NumTokensOfOwner} num_tokens_of_owner
 */
QueryWithPermit.prototype['num_tokens_of_owner'] = undefined;

/**
 * @member {Object} authorization
 */
QueryWithPermit.prototype['authorization'] = undefined;


QueryWithPermit.OneOf = ["QueryWithPermitOneOf", "QueryWithPermitOneOf1", "QueryWithPermitOneOf10", "QueryWithPermitOneOf11", "QueryWithPermitOneOf12", "QueryWithPermitOneOf13", "QueryWithPermitOneOf14", "QueryWithPermitOneOf15", "QueryWithPermitOneOf2", "QueryWithPermitOneOf3", "QueryWithPermitOneOf4", "QueryWithPermitOneOf5", "QueryWithPermitOneOf6", "QueryWithPermitOneOf7", "QueryWithPermitOneOf8", "QueryWithPermitOneOf9"];

export default QueryWithPermit;

