/**
 * Keych API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Burn from './Burn';

/**
 * The ExecuteMessagePostRequestOneOf18BatchBurnNft model module.
 * @module model/ExecuteMessagePostRequestOneOf18BatchBurnNft
 * @version 1.0.0
 */
class ExecuteMessagePostRequestOneOf18BatchBurnNft {
    /**
     * Constructs a new <code>ExecuteMessagePostRequestOneOf18BatchBurnNft</code>.
     * @alias module:model/ExecuteMessagePostRequestOneOf18BatchBurnNft
     * @param burns {Array.<module:model/Burn>} list of burns to perform
     */
    constructor(burns) { 
        
        ExecuteMessagePostRequestOneOf18BatchBurnNft.initialize(this, burns);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, burns) { 
        obj['burns'] = burns;
    }

    /**
     * Constructs a <code>ExecuteMessagePostRequestOneOf18BatchBurnNft</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecuteMessagePostRequestOneOf18BatchBurnNft} obj Optional instance to populate.
     * @return {module:model/ExecuteMessagePostRequestOneOf18BatchBurnNft} The populated <code>ExecuteMessagePostRequestOneOf18BatchBurnNft</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecuteMessagePostRequestOneOf18BatchBurnNft();

            if (data.hasOwnProperty('burns')) {
                obj['burns'] = ApiClient.convertToType(data['burns'], [Burn]);
            }
            if (data.hasOwnProperty('padding')) {
                obj['padding'] = ApiClient.convertToType(data['padding'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecuteMessagePostRequestOneOf18BatchBurnNft</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecuteMessagePostRequestOneOf18BatchBurnNft</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExecuteMessagePostRequestOneOf18BatchBurnNft.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['burns']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['burns'])) {
                throw new Error("Expected the field `burns` to be an array in the JSON data but got " + data['burns']);
            }
            // validate the optional field `burns` (array)
            for (const item of data['burns']) {
                Burn.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['padding'] && !(typeof data['padding'] === 'string' || data['padding'] instanceof String)) {
            throw new Error("Expected the field `padding` to be a primitive type in the JSON string but got " + data['padding']);
        }

        return true;
    }


}

ExecuteMessagePostRequestOneOf18BatchBurnNft.RequiredProperties = ["burns"];

/**
 * list of burns to perform
 * @member {Array.<module:model/Burn>} burns
 */
ExecuteMessagePostRequestOneOf18BatchBurnNft.prototype['burns'] = undefined;

/**
 * optional message length padding
 * @member {String} padding
 */
ExecuteMessagePostRequestOneOf18BatchBurnNft.prototype['padding'] = undefined;






export default ExecuteMessagePostRequestOneOf18BatchBurnNft;

