/**
 * Keych API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Royalty from './Royalty';

/**
 * The RoyaltyInfo model module.
 * @module model/RoyaltyInfo
 * @version 1.0.0
 */
class RoyaltyInfo {
    /**
     * Constructs a new <code>RoyaltyInfo</code>.
     * all royalty information
     * @alias module:model/RoyaltyInfo
     * @param decimalPlacesInRates {Number} decimal places in royalty rates
     * @param royalties {Array.<module:model/Royalty>} list of royalties
     */
    constructor(decimalPlacesInRates, royalties) { 
        
        RoyaltyInfo.initialize(this, decimalPlacesInRates, royalties);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, decimalPlacesInRates, royalties) { 
        obj['decimal_places_in_rates'] = decimalPlacesInRates;
        obj['royalties'] = royalties;
    }

    /**
     * Constructs a <code>RoyaltyInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoyaltyInfo} obj Optional instance to populate.
     * @return {module:model/RoyaltyInfo} The populated <code>RoyaltyInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoyaltyInfo();

            if (data.hasOwnProperty('decimal_places_in_rates')) {
                obj['decimal_places_in_rates'] = ApiClient.convertToType(data['decimal_places_in_rates'], 'Number');
            }
            if (data.hasOwnProperty('royalties')) {
                obj['royalties'] = ApiClient.convertToType(data['royalties'], [Royalty]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoyaltyInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoyaltyInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RoyaltyInfo.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['royalties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['royalties'])) {
                throw new Error("Expected the field `royalties` to be an array in the JSON data but got " + data['royalties']);
            }
            // validate the optional field `royalties` (array)
            for (const item of data['royalties']) {
                Royalty.validateJSON(item);
            };
        }

        return true;
    }


}

RoyaltyInfo.RequiredProperties = ["decimal_places_in_rates", "royalties"];

/**
 * decimal places in royalty rates
 * @member {Number} decimal_places_in_rates
 */
RoyaltyInfo.prototype['decimal_places_in_rates'] = undefined;

/**
 * list of royalties
 * @member {Array.<module:model/Royalty>} royalties
 */
RoyaltyInfo.prototype['royalties'] = undefined;






export default RoyaltyInfo;

